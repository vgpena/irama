{"version":3,"sources":["public/src/party.js"],"names":[],"mappings":"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","file":"public/src/party.js","sourcesContent":["\"use strict\";\n\nconst data = require('../../public/data/languages.json');\nconst palettes = require('../../public/data/palettes.json');\nconst Language = require('./generator.js');\nconst Palettes = require('./palettes.js');\nconst renderLimit = 5;\n\nconst mode = \"debug\";\n\nconst palettesObj = new Palettes(palettes);\nconst allPalettes = palettesObj.allPalettes;\nconst numPalettes = palettesObj.numPalettes;\n\nlet allLangs = [];\n\nlet langsAndVisuals = [];\n\nfunction generateLang(index, language){\n  let foo = new Language(language);\n  allLangs.push(foo);\n\n  let langAndVisuals = {\n    'name': foo.name,\n    'data': foo,\n    'visuals': {}\n  };\n\n  langsAndVisuals.push(langAndVisuals);\n}\n\nfunction genColor(rgba) {\n  let color = document.createElement(\"div\");\n\n  color.classList.add(\"palette-color\");\n\n  color.style.backgroundColor = rgba;\n\n  return color;\n}\n\nfunction genPaletteElt(paletteJSON) {\n  let palette = document.createElement(\"div\");\n\n// create light element\n  let light = document.createElement(\"div\");\n  light.classList.add(\"palette-component\");\n\n  let lightTitle = document.createElement(\"h2\");\n  lightTitle.appendChild(document.createTextNode(\"Light\"));\n\n  light.appendChild(lightTitle);\n  light.appendChild(genColor(paletteJSON.light));\n\n  palette.appendChild(light);\n\n// create dark element\n  let dark = document.createElement(\"div\");\n  dark.classList.add(\"palette-component\");\n\n  let darkTitle = document.createElement(\"h2\");\n  darkTitle.appendChild(document.createTextNode(\"Dark\"));\n\n  dark.appendChild(darkTitle);\n  dark.appendChild(genColor(paletteJSON.dark));\n\n  palette.appendChild(dark);\n\n  return palette;\n}\n\nfunction printLangs() {\n  let langsList = document.getElementsByClassName('languages-list')[0];\n\n  for (let i = 0; i < langsAndVisuals.length; i++) {\n    let langElt = document.createElement(\"li\");\n    langElt.classList.add(\"language\");\n\n\n    let langTitle = document.createElement(\"h1\");\n    langTitle.appendChild(document.createTextNode(langsAndVisuals[i].name));\n\n    let langPalette = genPaletteElt(langsAndVisuals[i].visuals.palette);\n\n    langElt.appendChild(langTitle);\n    langElt.appendChild(langPalette);\n\n    langsList.appendChild(langElt);\n  }\n}\n\nfunction done() {\n  if (mode === \"debug\") {\n    printLangs();\n  }\n}\n\nfunction choosePalettes() {\n  for (let i = 0; i <= langsAndVisuals.length; i++) {\n    if (i < langsAndVisuals.length) {\n      let currLang = langsAndVisuals[i];\n\n      // create arr of eligible palettes for lang\n      // (where numColors in palette >= numColors in lang)\n\n      let eligiblePalettes = [];\n      for (let paletteSet in allPalettes) {\n        if (parseInt(paletteSet) >= currLang.data.numColors) {\n          for (let j = 0; j < allPalettes[paletteSet].length; j++) {\n            eligiblePalettes.push(allPalettes[paletteSet][j]);\n          }\n        }\n      }\n\n      let randIndex = Math.floor(Math.random() * eligiblePalettes.length);\n\n      let chosenPalette = eligiblePalettes[randIndex];\n\n      currLang.visuals.palette = chosenPalette;\n\n      console.log(chosenPalette);\n\n    } else {\n      done();\n    }\n  }\n}\n\nfor (let i = 0; i <= renderLimit; i++){\n  // for as many as we want, generate language from data\n  if (i < renderLimit) {\n    generateLang(i, data[i]);\n  } else {\n    // once we've done that, start making things to actually render\n    choosePalettes();\n  }\n}\n"]}