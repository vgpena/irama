{"version":3,"sources":["public/src/party.js"],"names":[],"mappings":"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","file":"public/src/party.js","sourcesContent":["\"use strict\";\n\n/*\n* data\n*/\nconst data = require('../../public/data/languages.json');\n\n/*\n* modules\n*/\nconst Language = require('./generator.js');\nconst Visuals = require('./visuals.js');\n\n/*\n* settings\n*/\nconst renderLimit = 3;\nconst mode = \"debug\";\n// const mode = \"render\";\n// const langMode = \"normal\";\nconst langMode = \"rand\";\n\n\n/*\n* keeping track of things\n*/\nlet allLangs = [];\nlet langsAndVisuals = [];\n\n\n/*\n*\n* Create object based on language data\n* Lang will be saved into \"data\" field;\n* info related to rendering (colors, shapes, etc)\n* will be saved into \"visuals\" field.\n*\n*/\nfunction generateLang(index, language){\n  let foo = new Language(language);\n  allLangs.push(foo);\n\n  let langAndVisuals = {\n    'name': foo.name,\n    'data': foo,\n    'visuals': {}\n  };\n\n  langsAndVisuals.push(langAndVisuals);\n}\n\n/*\n*\n* Creates a palette element with a specific background color.\n*\n*/\nfunction genColorElt(rgba) {\n  let color = document.createElement(\"div\");\n  color.classList.add(\"palette-color\");\n  color.style.backgroundColor = rgba;\n\n  return color;\n}\n\n\n/*\n*\n* Creates a \"palette\" element with a language's\n* light, dark, and accent colors\n*\n*/\nfunction genPaletteElt(paletteJSON) {\n  let palette = document.createElement(\"div\");\n\n  // create light element\n  let light = document.createElement(\"div\");\n  light.classList.add(\"palette-component\");\n\n  let lightTitle = document.createElement(\"h2\");\n  lightTitle.appendChild(document.createTextNode(\"Light\"));\n\n  light.appendChild(lightTitle);\n  light.appendChild(genColorElt(paletteJSON.light));\n\n  palette.appendChild(light);\n\n  // create dark element\n  let dark = document.createElement(\"div\");\n  dark.classList.add(\"palette-component\");\n\n  let darkTitle = document.createElement(\"h2\");\n  darkTitle.appendChild(document.createTextNode(\"Dark\"));\n\n  dark.appendChild(darkTitle);\n  dark.appendChild(genColorElt(paletteJSON.dark));\n\n  palette.appendChild(dark);\n\n  // create other colors (but only if they should be there)\n  if (paletteJSON.others.length > 0) {\n    let others = document.createElement(\"div\");\n    others.classList.add(\"palette-component\");\n    let othersTitle = document.createElement(\"h2\");\n    othersTitle.appendChild(document.createTextNode(\"Others\"));\n\n    others.appendChild(othersTitle);\n\n    for (let i = 0; i < paletteJSON.others.length; i++) {\n      others.appendChild(genColorElt(paletteJSON.others[i]));\n    }\n\n    palette.appendChild(others);\n  }\n\n\n  return palette;\n}\n\n\nfunction genPatternElt(data) {\n  let patternElt = document.createElement(\"div\");\n  let patternEltTitle = document.createElement(\"h2\");\n\n  patternEltTitle.appendChild(document.createTextNode(data.type));\n  patternElt.appendChild(patternEltTitle);\n\n  let componentsList = document.createElement(\"ul\");\n  for (let i = 0; i < data.components.length; i++) {\n    let componentItem = document.createElement(\"li\");\n    componentItem.appendChild(document.createTextNode(JSON.stringify(data.components[i])));\n    componentsList.appendChild(componentItem);\n  }\n  if (!data.components.length || data.components.length === 0){\n    componentsList = document.createElement(\"p\");\n    componentsList.classList.add(\"fixme\");\n    componentsList.appendChild(document.createTextNode(\"Insert components for Free pattern!\"));\n  }\n\n  patternElt.appendChild(componentsList);\n\n  return patternElt;\n}\n\n/*\n*\n* Debug output -- makes a list of languages\n* and their salient features\n* and adds it to the DOM\n*\n*/\nfunction printLangs() {\n  let langsList = document.getElementsByClassName('languages-list')[0];\n\n  for (let i = 0; i < langsAndVisuals.length; i++) {\n    let langElt = document.createElement(\"li\");\n    langElt.classList.add(\"language\");\n\n\n    let langTitle = document.createElement(\"h1\");\n    langTitle.appendChild(document.createTextNode(langsAndVisuals[i].name));\n\n    let langPalette = genPaletteElt(langsAndVisuals[i].visuals.palette);\n\n    langElt.appendChild(langTitle);\n    langElt.appendChild(langPalette);\n\n    langElt.appendChild(genPatternElt(langsAndVisuals[i].visuals.pattern));\n\n    langsList.appendChild(langElt);\n  }\n}\n\n/*\n*\n* Generate visual imformation for languages:\n* colors, patterns, borders, etc.\n*\n*/\nfunction generateVisualsForLangs() {\n  for (let i = 0; i <= langsAndVisuals.length; i++) {\n    if (i < langsAndVisuals.length) {\n      langsAndVisuals[i] = new Visuals(langsAndVisuals[i]);\n    } else {\n      done();\n    }\n  }\n}\n\n\n/*\n*\n* When everything that needs to be done has been done\n*\n*/\nfunction done() {\n  if (mode === \"debug\") {\n    printLangs();\n  }\n}\n\n\n/*\n*\n* Generate langs -- sets of properties based on languages' data\n* set a const to determine whether the languages used\n* are the first n in the dataset or are randomly chosen\n*\n*/\n\nlet chooseFrom = data;\nif (langMode === \"rand\") {\n  let chooseFromRand = [];\n  while (chooseFromRand.length < renderLimit) {\n    let newIndex = Math.floor(Math.random() * data.length)\n    if (chooseFromRand.indexOf(newIndex) === -1) {\n      chooseFromRand.push(newIndex);\n    }\n  }\n  chooseFrom = [];\n  for (let i = 0; i < chooseFromRand.length; i++) {\n    chooseFrom.push(data[chooseFromRand[i]]);\n  }\n}\n\nfor (let i = 0; i <= renderLimit; i++){\n  // for as many as we want, generate language from data\n  if (i < renderLimit) {\n    generateLang(i, chooseFrom[i]);\n  } else {\n    // once we've done that, start making things to actually render\n    generateVisualsForLangs();\n  }\n}\n"]}